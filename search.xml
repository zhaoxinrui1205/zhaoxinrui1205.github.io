<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>new article</title>
    <url>/2020/03/24/new-article/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/03/24/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>悼念日大学官网样式，及我的第一篇博客</title>
    <url>/2020/04/06/gray-css/</url>
    <content><![CDATA[<h1 id="第一篇博客"><a href="#第一篇博客" class="headerlink" title="第一篇博客"></a>第一篇博客</h1><p>​        这是第一篇博客，之前有搭建过WordPress，但是有段时间服务器被删库，还没做备份，后来腾讯云服务器到期没续费，索性放弃了这个想法。正好也没写几篇，乘着疫情期间空闲时间比较多，所以搭建了这个基于Hexo和Github Pages的静态博客，之前的学过的内容和遇见的问题，如果再次遇到，会慢慢的补充在博客上。</p>
<h1 id="关于2020年4月4日哀悼日"><a href="#关于2020年4月4日哀悼日" class="headerlink" title="关于2020年4月4日哀悼日"></a>关于2020年4月4日哀悼日</h1><p>​        没啥说的，清明期间悼念烈士和同胞。有网站要改成黑白灰色调的要求，因为我是大学的官网的制作人之一（当然是基于站群系统的，我只做了前端），所以应领导要求改样式。一开始我是想着单独写一个CSS，把图片都ps处理之后替换，还专门让老师把文章的插图也换了灰色，但后来想想太麻烦了，网上果然有现成的例子。</p>
<h1 id="filter（滤镜）"><a href="#filter（滤镜）" class="headerlink" title="filter（滤镜）"></a>filter（滤镜）</h1><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">html</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="attribute">filter</span>:progid:DXImageTransform.Microsoft.<span class="built_in">BasicImage</span>(grayscale=<span class="number">1</span>);</span><br><span class="line">    <span class="attribute">filter</span>: <span class="built_in">grayscale</span>(<span class="number">100%</span>);</span><br><span class="line">    <span class="attribute">-webkit-filter</span>: <span class="built_in">grayscale</span>(<span class="number">100%</span>);</span><br><span class="line">    <span class="attribute">-moz-filter</span>: <span class="built_in">grayscale</span>(<span class="number">100%</span>);</span><br><span class="line">    <span class="attribute">-ms-filter</span>: <span class="built_in">grayscale</span>(<span class="number">100%</span>);</span><br><span class="line">    <span class="attribute">-o-filter</span>: <span class="built_in">grayscale</span>(<span class="number">100%</span>);</span><br><span class="line">    <span class="attribute">filter</span>: progid:DXImageTransform.Microsoft.<span class="built_in">BasicImage</span>(grayscale=<span class="number">1</span>);</span><br><span class="line">    <span class="attribute">filter</span>: gray;</span><br><span class="line">    <span class="attribute">-webkit-filter</span>: <span class="built_in">grayscale</span>(<span class="number">1</span>); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>​        原理就一个<a href="https://www.runoob.com/cssref/css3-pr-filter.html" target="_blank" rel="noopener">filter</a>，就是滤镜。这么多行也是为了兼容不同浏览器，grayscale(100%)是css3的新标准，用于定义网站的灰度，剩下的代码都是用于ie兼容，但只能兼容到ie6-9，这是一个挺麻烦的问题，ie10和11无法生效。</p>
<p>​        也有考虑过用grayscale.js处理，但是这个js速度太慢，学校官网数据挺多，一卡就是三分钟，完全不行，最后只能手写了一部分样式，让小伙伴处理了几个背景图，然后这天过了再回滚回之前彩色的样子。</p>
<p>​        ie10和11虽然比起ie6789有了很大提升，但是依旧不尽人意，毕竟是多年前的产物，但学校领导们用的人不少，给学校打个工总能遇到ie678的奇葩，国产浏览器也总喜欢用兼容模式，属实给人增添烦恼。</p>
<blockquote>
<p>新事物之所以必然战胜旧事物，从根本上说是由于新事物较旧事物更符合事物发展的必然趋势。</p>
</blockquote>
]]></content>
      <categories>
        <category>日常随笔</category>
        <category>前端</category>
      </categories>
      <tags>
        <tag>css</tag>
        <tag>前端</tag>
        <tag>心情</tag>
      </tags>
  </entry>
  <entry>
    <title>element ui中table的多选selection会被重置的问题</title>
    <url>/2020/04/20/element-table/</url>
    <content><![CDATA[<h1 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h1><p>在element ui中，使用type = “selection“可以插入表格的多选</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-table</span></span></span><br><span class="line"><span class="tag">    <span class="attr">ref</span>=<span class="string">"multipleTable"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">:data</span>=<span class="string">"tableData"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">style</span>=<span class="string">"width: 100%"</span></span></span><br><span class="line"><span class="tag">    @<span class="attr">selection-change</span>=<span class="string">"handleSelectionChange"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-table-column</span></span></span><br><span class="line"><span class="tag">      <span class="attr">type</span>=<span class="string">"selection"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">width</span>=<span class="string">"55"</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>但是当同一页面中出现分页按钮，el-select选择框或带有选择的input时（具有‘选择’功能的按钮），table的多选会被重置，并触发change事件。</p>
<p><img src="http://imagezxr.test.upcdn.net/blogimg/2020-04/element-table1.png" alt="element-table1"></p>
<p>先选中某几个</p>
<p><img src="http://imagezxr.test.upcdn.net/blogimg/2020-04/element-table2.png" alt="element-table2"></p>
<p>在选中右下角el-select中的某一项，就会使多选消失。因为这个问题已经解决了，所以这里是手动去掉的选项，为了展示存在bug的效果。包括但不限于翻页，input的选择框，也会导致selection被重置。</p>
<h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><p>一开始我是准备通过js来控制selection的选中，但是el-select的change方法比selection的消失更早触发，而且，还需要判断多选的消失是否是我们想要的，不可能为每一个选中操作的绑定一个复杂的change。这个思路有点问题了。</p>
<p>后来在文档里发现了reserve-selection，可以用于解决这个问题。</p>
<blockquote>
<p>仅对 type=selection 的列有效，类型为 Boolean，为 true 则会在数据更新之后保留之前选中的数据（需指定 <code>row-key</code>）</p>
</blockquote>
<p>在使用这一属性的同时，要注意table必须存在row-key，以达到对不同分页的行对象进行区分。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-table</span></span></span><br><span class="line"><span class="tag">      <span class="attr">v-loading</span>=<span class="string">"listLoading"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:data</span>=<span class="string">"list.slice((currentPage-1)*pagesize,currentPage*pagesize)"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">element-loading-text</span>=<span class="string">"Loading"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">border</span></span></span><br><span class="line"><span class="tag">      <span class="attr">fit</span></span></span><br><span class="line"><span class="tag">      <span class="attr">highlight-current-row</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:row-key</span>=<span class="string">"getRowKey"</span></span></span><br><span class="line"><span class="tag">      @<span class="attr">selection-change</span>=<span class="string">"handleSelectionChange"</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">type</span>=<span class="string">"selection"</span> <span class="attr">width</span>=<span class="string">"40"</span> <span class="attr">:reserve-selection</span>=<span class="string">"true"</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">getRowKey(row) &#123;</span><br><span class="line">      <span class="keyword">return</span> row.id</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure>

<p>这么做，就可以达到我们所需要的效果：</p>
<p><img src="http://imagezxr.test.upcdn.net/blogimg/2020-04/element-table3.png" alt="element-table3"></p>
<p>此时即使翻页，也不会影响已经选中的部分。</p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>有一说一，这不算是element本身的bug，因为他对这种这种情况做出了解决的方案。但这算是一个缺少人性化的一个部分。为什么这个bug卡了好几个小时，还是与我没有认真看文档有关。过去用一个框架的习惯总是直接上手，遇到了问题再去查文档，以至于很多问题浪费了时间，还没有得到最优的解法。但这次el-table的属性和方法有点多，而且文档写的属实有点简洁。</p>
<p>其实这个问题在一月的时候，就有人在<a href="https://github.com/ElemeFE/element/issues/18635" target="_blank" rel="noopener">issue</a>上提出来了，后来在Stack Overflow上又遇到了这位老哥的问题，也是一个和我一样不看文档的（不过这哥们情有可原，看起来是阿拉伯语的人士，最多看看英文文档）。当然找到了解决方法后也给他发了解答，不过三个月过去了他可能已经不用了。</p>
<p>前几天vue3.0 的beta版已经开始公测了，感觉吸取了一部分react的东西，估计等开始商业化使用也要一年，这一年里，各大vue相关的框架应该也会推出支持3.0版的。element是个挺优秀的框架，但最近维护和更新都不怎么频繁了，十三号更新了一次，但再上次就是半年前了，不知道是不是去准备3.0的东西了。</p>
<p>4月21日晚上，b站直播会有尤大来谈vue3.0，正好可以去康康大佬直播。</p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>vue</tag>
        <tag>element ui</tag>
      </tags>
  </entry>
</search>
